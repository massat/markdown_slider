#!/usr/bin/env ruby

USAGE = <<'EOS'

USAGE:
    md-slider [options] path/to/markdown > path/to/html

options:

    -h, --help          :show help message

    --title TITLE       :specifies the title of slides. (set as title of HTML)

    --template TEMPLATE :specifies an ERB template.

    --style STYLE       :specifies a css file.

    --script SCRIPT     :specifies a js file

EOS

root = File.expand_path('../../', __FILE__)
$:.unshift File.expand_path('lib', root)

require 'optparse'
require 'markdown_slider'

begin

  args    = ARGV.dup
  options = {}

  parser = OptionParser.new do |opts|
    opts.on('-h', '--help')        {|opt| options[:help]     = opt }
    opts.on('--title    TITLE')    {|opt| options[:title]    = opt }
    opts.on('--template TEMPLATE') {|opt| options[:template] = opt }
    opts.on('--style    STYLE')    {|opt| options[:style]    = opt }
    opts.on('--script   SCRIPT')   {|opt| options[:script]   = opt }
  end

  parser.parse!(args)

  path_to_markdown = args.length > 0 ? args.pop : nil

  if path_to_markdown == nil or options.has_key?(:help)
    STDOUT.puts USAGE
    exit
  end

  STDOUT.puts MarkdownSlider.run(path_to_markdown, options)

rescue => e

  STDERR.puts "ERR: " + e.message
  STDOUT.puts USAGE

end
